CREATE TABLE USERS (USERID INTEGER NOT NULL, USERNAME VARCHAR(100) NOT NULL, DISPLAYNAME VARCHAR(100) NOT NULL, EMAIL VARCHAR(100), SOURCE VARCHAR(4) NOT NULL, PASSWORDHASH VARCHAR(86) NOT NULL, PASSWORDSALT VARCHAR(10) NOT NULL, INSERTDATE TIMESTAMP NOT NULL, INSERTUSERID INTEGER NOT NULL, UPDATEDATE TIMESTAMP, UPDATEUSERID INTEGER, ISACTIVE SMALLINT DEFAULT 1 NOT NULL,LASTDIRECTORYUPDATE TIMESTAMP,USERIMAGE VARCHAR(100), CONSTRAINT PK_USERS PRIMARY KEY (USERID));
CREATE GENERATOR USERS_GEN;


CREATE TABLE LANGUAGES (ID INTEGER NOT NULL, LANGUAGEID VARCHAR(10) NOT NULL, LANGUAGENAME VARCHAR(50) NOT NULL, CONSTRAINT PK_LANGUAGES PRIMARY KEY (ID));
CREATE GENERATOR LANGUAGES_GEN;


CREATE TABLE USERPERMISSIONS (USERPERMISSIONID BIGINT NOT NULL, USERID INTEGER NOT NULL, PERMISSIONKEY VARCHAR(100) NOT NULL,GRANTED SMALLINT DEFAULT 1 NOT NULL, CONSTRAINT PK_USERPERMISSIONS PRIMARY KEY (USERPERMISSIONID));
ALTER TABLE USERPERMISSIONS ADD CONSTRAINT FK_USERPERMISSIONS_USERID FOREIGN KEY (USERID) REFERENCES USERS (USERID);
CREATE UNIQUE ASC INDEX UQ_USERPERM_USERID_PERMKEY ON USERPERMISSIONS (USERID, PERMISSIONKEY);
CREATE GENERATOR USERPERMISSIONS_GEN;

CREATE TABLE ROLES (ROLEID INTEGER NOT NULL, ROLENAME VARCHAR(100) NOT NULL, CONSTRAINT PK_ROLES PRIMARY KEY (ROLEID));
CREATE GENERATOR ROLES_GEN;


CREATE TABLE ROLEPERMISSIONS (ROLEPERMISSIONID BIGINT NOT NULL, ROLEID INTEGER NOT NULL, PERMISSIONKEY VARCHAR(100) NOT NULL, CONSTRAINT PK_ROLEPERMISSIONS PRIMARY KEY (ROLEPERMISSIONID));
ALTER TABLE ROLEPERMISSIONS ADD CONSTRAINT FK_ROLEPERMISSIONS_ROLEID FOREIGN KEY (ROLEID) REFERENCES ROLES (ROLEID);
CREATE UNIQUE ASC INDEX UQ_ROLEPERM_ROLEID_PERMKEY ON ROLEPERMISSIONS (ROLEID, PERMISSIONKEY);
CREATE GENERATOR ROLEPERMISSIONS_GEN;


CREATE TABLE USERROLES (USERROLEID BIGINT NOT NULL, USERID INTEGER NOT NULL, ROLEID INTEGER NOT NULL, CONSTRAINT PK_USERROLES PRIMARY KEY (USERROLEID));
ALTER TABLE USERROLES ADD CONSTRAINT FK_USERROLES_USERID FOREIGN KEY (USERID) REFERENCES USERS (USERID);
ALTER TABLE USERROLES ADD CONSTRAINT FK_USERROLES_ROLEID FOREIGN KEY (ROLEID) REFERENCES ROLES (ROLEID);
CREATE UNIQUE ASC INDEX UQ_USERROLES_USERID_ROLEID ON USERROLES (USERID, ROLEID);
CREATE ASC INDEX IX_USERROLES_ROLEID_USERID ON USERROLES (ROLEID, USERID);
CREATE GENERATOR USERROLES_GEN;

CREATE TABLE USERPREFERENCES (USERPREFERENCEID INTEGER NOT NULL, USERID INTEGER NOT NULL, PREFERENCETYPE VARCHAR(100) NOT NULL, NAME VARCHAR(200) NOT NULL, PREFERENCEVALUE BLOB SUB_TYPE TEXT, CONSTRAINT PK_USERPREFERENCES PRIMARY KEY (USERPREFERENCEID));
CREATE GENERATOR USERPREFERENCES_GEN;

CREATE TABLE EXCEPTIONS (ID BIGINT NOT NULL, GUID CHAR(16) CHARACTER SET OCTETS NOT NULL, APPLICATIONNAME VARCHAR(50) NOT NULL, MACHINENAME VARCHAR(50) NOT NULL, CREATIONDATE TIMESTAMP NOT NULL, EXCEPTIONTYPE VARCHAR(100) NOT NULL, ISPROTECTED SMALLINT DEFAULT 1 NOT NULL, HOST VARCHAR(100), URL VARCHAR(500), HTTPMETHOD VARCHAR(10), IPADDRESS VARCHAR(40), SOURCE VARCHAR(100), EXCEPTIONMESSAGE VARCHAR(1000), DETAIL BLOB SUB_TYPE TEXT, STATUSCODE INTEGER, SQL BLOB SUB_TYPE TEXT, DELETIONDATE TIMESTAMP, FULLJSON BLOB SUB_TYPE TEXT, ERRORHASH INTEGER, DUPLICATECOUNT INTEGER DEFAULT 1 NOT NULL, CONSTRAINT PK_EXCEPTIONS PRIMARY KEY (ID));
CREATE ASC INDEX IX_EXCEPTIONS_GUID_APP_DEL_CRE ON EXCEPTIONS (GUID, APPLICATIONNAME, DELETIONDATE, CREATIONDATE);
CREATE ASC INDEX IX_EXCEPTIONS_HASH_APP_CRE_DEL ON EXCEPTIONS (ERRORHASH, APPLICATIONNAME, CREATIONDATE, DELETIONDATE);
CREATE ASC INDEX IX_EXCEPTIONS_APP_DEL_CRE ON EXCEPTIONS (APPLICATIONNAME, DELETIONDATE, CREATIONDATE);
CREATE GENERATOR EXCEPTIONS_GEN;

commit transaction;

SET TERM ^ ;

CREATE TRIGGER USERS_GEN_TRG FOR USERS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.USERID IS NULL) THEN
        NEW.USERID = GEN_ID(USERS_GEN, 1);
END^

CREATE TRIGGER LANGUAGES_GEN_TRG FOR LANGUAGES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(LANGUAGES_GEN, 1);
END^

CREATE TRIGGER USERPERMISSIONS_GEN_TRG FOR USERPERMISSIONS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.USERPERMISSIONID IS NULL) THEN
        NEW.USERPERMISSIONID = GEN_ID(USERPERMISSIONS_GEN, 1);
END^

CREATE TRIGGER ROLES_GEN_TRG FOR ROLES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ROLEID IS NULL) THEN
        NEW.ROLEID = GEN_ID(ROLES_GEN, 1);
END^

CREATE TRIGGER ROLEPERMISSIONS_GEN_TRG FOR ROLEPERMISSIONS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ROLEPERMISSIONID IS NULL) THEN
        NEW.ROLEPERMISSIONID = GEN_ID(ROLEPERMISSIONS_GEN, 1);
END^

CREATE TRIGGER USERROLES_GEN_TRG FOR USERROLES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.USERROLEID IS NULL) THEN
        NEW.USERROLEID = GEN_ID(USERROLES_GEN, 1);
END^

CREATE TRIGGER USERPREFERENCES_GEN_TRG FOR USERPREFERENCES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.USERID IS NULL) THEN
        NEW.USERID = GEN_ID(USERPREFERENCES_GEN, 1);
END^

CREATE TRIGGER EXCEPTIONS_GEN_TRG FOR EXCEPTIONS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(EXCEPTIONS_GEN, 1);
END^

SET TERM ; ^

commit transaction;

INSERT INTO USERS (USERNAME, DISPLAYNAME, EMAIL, SOURCE, PASSWORDHASH, PASSWORDSALT, INSERTDATE, INSERTUSERID, ISACTIVE) 
VALUES ('admin', 'admin', 'admin@dummy.com', 'site', 'rfqpSPYs0ekFlPyvIRTXsdhE/qrTHFF+kKsAUla7pFkXL4BgLGlTe89GDX5DBysenMDj8AqbIZPybqvusyCjwQ', 'hJf_F', '2014-01-01 00:00:00', 1, 1);

INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('en', 'English');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('ru', 'Russian');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('ed', 'Spanish');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('tr', 'Turkish');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('de', 'German');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('zh-CN', 'chinese (Simplified)');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('it', 'Italian');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('pt', 'Portuguese');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('pt-BR', 'Portuguese (Brazil)');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('fa', 'Farsi');
INSERT INTO LANGUAGES (LANGUAGEID, LANGUAGENAME) VALUES ('vi-VN', 'Vietnamese (Vietnam)');

commit transaction;
