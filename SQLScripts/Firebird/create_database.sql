CREATE TABLE SERENE_TENANTS (TENANT_ID INTEGER NOT NULL PRIMARY KEY, TENANT_NAME VARCHAR(100) NOT NULL);
CREATE GENERATOR SERENE_TENANTS_GEN;

CREATE TABLE SERENE_USERS (USERID INTEGER NOT NULL, USERNAME VARCHAR(100) NOT NULL, DISPLAYNAME VARCHAR(100) NOT NULL, EMAIL VARCHAR(100), SOURCE VARCHAR(4) NOT NULL, PASSWORDHASH VARCHAR(86) NOT NULL, PASSWORDSALT VARCHAR(10) NOT NULL, INSERTDATE TIMESTAMP NOT NULL, INSERTUSERID INTEGER NOT NULL, UPDATEDATE TIMESTAMP, UPDATEUSERID INTEGER, ISACTIVE SMALLINT DEFAULT 1 NOT NULL,LASTDIRECTORYUPDATE TIMESTAMP,USERIMAGE VARCHAR(100), TENANT_ID INTEGER NOT NULL REFERENCES SERENE_TENANTS(TENANT_ID), CONSTRAINT PK_USERS PRIMARY KEY (USERID));
CREATE GENERATOR SERENE_USERS_GEN;


CREATE TABLE SERENE_LANGUAGES (ID INTEGER NOT NULL, LANGUAGEID VARCHAR(10) NOT NULL, LANGUAGENAME VARCHAR(50) NOT NULL,TENANT_ID INTEGER NOT NULL REFERENCES SERENE_TENANTS(TENANT_ID), CONSTRAINT PK_LANGUAGES PRIMARY KEY (ID));
CREATE GENERATOR SERENE_LANGUAGES_GEN;


CREATE TABLE SERENE_USERPERMISSIONS (USERPERMISSIONID BIGINT NOT NULL, USERID INTEGER NOT NULL, PERMISSIONKEY VARCHAR(100) NOT NULL,GRANTED SMALLINT DEFAULT 1 NOT NULL, CONSTRAINT PK_USERPERMISSIONS PRIMARY KEY (USERPERMISSIONID));
ALTER TABLE SERENE_USERPERMISSIONS ADD CONSTRAINT FK_USERPERMISSIONS_USERID FOREIGN KEY (USERID) REFERENCES SERENE_USERS (USERID);
CREATE UNIQUE ASC INDEX UQ_USERPERM_USERID_PERMKEY ON SERENE_USERPERMISSIONS (USERID, PERMISSIONKEY);
CREATE GENERATOR SERENE_USERPERMISSIONS_GEN;

CREATE TABLE SERENE_ROLES (ROLEID INTEGER NOT NULL, ROLENAME VARCHAR(100) NOT NULL,TENANT_ID INTEGER NOT NULL REFERENCES SERENE_TENANTS(TENANT_ID), CONSTRAINT PK_ROLES PRIMARY KEY (ROLEID));
CREATE GENERATOR SERENE_ROLES_GEN;


CREATE TABLE SERENE_ROLEPERMISSIONS (ROLEPERMISSIONID BIGINT NOT NULL, ROLEID INTEGER NOT NULL, PERMISSIONKEY VARCHAR(100) NOT NULL, CONSTRAINT PK_ROLEPERMISSIONS PRIMARY KEY (ROLEPERMISSIONID));
ALTER TABLE SERENE_ROLEPERMISSIONS ADD CONSTRAINT FK_ROLEPERMISSIONS_ROLEID FOREIGN KEY (ROLEID) REFERENCES SERENE_ROLES (ROLEID);
CREATE UNIQUE ASC INDEX UQ_ROLEPERM_ROLEID_PERMKEY ON SERENE_ROLEPERMISSIONS (ROLEID, PERMISSIONKEY);
CREATE GENERATOR SERENE_ROLEPERMISSIONS_GEN;


CREATE TABLE SERENE_USERROLES (USERROLEID BIGINT NOT NULL, USERID INTEGER NOT NULL, ROLEID INTEGER NOT NULL, CONSTRAINT PK_USERROLES PRIMARY KEY (USERROLEID));
ALTER TABLE SERENE_USERROLES ADD CONSTRAINT FK_USERROLES_USERID FOREIGN KEY (USERID) REFERENCES SERENE_USERS (USERID);
ALTER TABLE SERENE_USERROLES ADD CONSTRAINT FK_USERROLES_ROLEID FOREIGN KEY (ROLEID) REFERENCES SERENE_ROLES (ROLEID);
CREATE UNIQUE ASC INDEX UQ_USERROLES_USERID_ROLEID ON SERENE_USERROLES (USERID, ROLEID);
CREATE ASC INDEX IX_USERROLES_ROLEID_USERID ON SERENE_USERROLES (ROLEID, USERID);
CREATE GENERATOR SERENE_USERROLES_GEN;

CREATE TABLE SERENE_USERPREFERENCES (USERPREFERENCEID INTEGER NOT NULL, USERID INTEGER NOT NULL, PREFERENCETYPE VARCHAR(100) NOT NULL, NAME VARCHAR(200) NOT NULL, PREFERENCEVALUE BLOB SUB_TYPE TEXT, CONSTRAINT PK_USERPREFERENCES PRIMARY KEY (USERPREFERENCEID));
CREATE GENERATOR SERENE_USERPREFERENCES_GEN;

CREATE TABLE SERENE_EXCEPTIONS (ID BIGINT NOT NULL, GUID CHAR(16) CHARACTER SET OCTETS NOT NULL, APPLICATIONNAME VARCHAR(50) NOT NULL, MACHINENAME VARCHAR(50) NOT NULL, CREATIONDATE TIMESTAMP NOT NULL, EXCEPTIONTYPE VARCHAR(100) NOT NULL, ISPROTECTED SMALLINT DEFAULT 1 NOT NULL, HOST VARCHAR(100), URL VARCHAR(500), HTTPMETHOD VARCHAR(10), IPADDRESS VARCHAR(40), SOURCE VARCHAR(100), EXCEPTIONMESSAGE VARCHAR(1000), DETAIL BLOB SUB_TYPE TEXT, STATUSCODE INTEGER, SQL BLOB SUB_TYPE TEXT, DELETIONDATE TIMESTAMP, FULLJSON BLOB SUB_TYPE TEXT, ERRORHASH INTEGER, DUPLICATECOUNT INTEGER DEFAULT 1 NOT NULL, CONSTRAINT PK_EXCEPTIONS PRIMARY KEY (ID));
CREATE ASC INDEX IX_EXCEPTIONS_GUID_APP_DEL_CRE ON SERENE_EXCEPTIONS (GUID, APPLICATIONNAME, DELETIONDATE, CREATIONDATE);
CREATE ASC INDEX IX_EXCEPTIONS_HASH_APP_CRE_DEL ON SERENE_EXCEPTIONS (ERRORHASH, APPLICATIONNAME, CREATIONDATE, DELETIONDATE);
CREATE ASC INDEX IX_EXCEPTIONS_APP_DEL_CRE ON SERENE_EXCEPTIONS (APPLICATIONNAME, DELETIONDATE, CREATIONDATE);
CREATE GENERATOR SERENE_EXCEPTIONS_GEN;

commit work;

SET TERM ^ ;

CREATE TRIGGER SERENE_USERS_TRG FOR SERENE_USERS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.USERID IS NULL) THEN
        NEW.USERID = GEN_ID(SERENE_USERS_GEN, 1);
END^

CREATE TRIGGER SERENE_LANGUAGES_TRG FOR SERENE_LANGUAGES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(SERENE_LANGUAGES_GEN, 1);
END^

CREATE TRIGGER SERENE_USERPERMISSIONS_TRG FOR SERENE_USERPERMISSIONS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.USERPERMISSIONID IS NULL) THEN
        NEW.USERPERMISSIONID = GEN_ID(SERENE_USERPERMISSIONS_GEN, 1);
END^

CREATE TRIGGER SERENE_ROLES_TRG FOR SERENE_ROLES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ROLEID IS NULL) THEN
        NEW.ROLEID = GEN_ID(SERENE_ROLES_GEN, 1);
END^

CREATE TRIGGER SERENE_ROLEPERMISSIONS_TRG FOR SERENE_ROLEPERMISSIONS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ROLEPERMISSIONID IS NULL) THEN
        NEW.ROLEPERMISSIONID = GEN_ID(SERENE_ROLEPERMISSIONS_GEN, 1);
END^

CREATE TRIGGER SERENE_USERROLES_TRG FOR SERENE_USERROLES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.USERROLEID IS NULL) THEN
        NEW.USERROLEID = GEN_ID(SERENE_USERROLES_GEN, 1);
END^

CREATE TRIGGER SERENE_USERPREFERENCES_TRG FOR SERENE_USERPREFERENCES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.USERID IS NULL) THEN
        NEW.USERID = GEN_ID(SERENE_USERPREFERENCES_GEN, 1);
END^

CREATE TRIGGER SERENE_EXCEPTIONS_TRG FOR SERENE_EXCEPTIONS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(SERENE_EXCEPTIONS_GEN, 1);
END^

CREATE TRIGGER SERENE_TENANTS_TRG FOR SERENE_TENANTS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.TENANT_ID IS NULL) THEN
        NEW.TENANT_ID = GEN_ID(SERENE_TENANTS_GEN, 1);
END^

SET TERM ; ^

commit work;

INSERT INTO SERENE_TENANTS(TENANT_NAME)
VALUES('Primary Tenant');

INSERT INTO SERENE_USERS (USERNAME, DISPLAYNAME, EMAIL, SOURCE, PASSWORDHASH, PASSWORDSALT, INSERTDATE, INSERTUSERID, ISACTIVE, TENANT_ID) 
VALUES ('admin', 'admin', 'admin@dummy.com', 'site', 'rfqpSPYs0ekFlPyvIRTXsdhE/qrTHFF+kKsAUla7pFkXL4BgLGlTe89GDX5DBysenMDj8AqbIZPybqvusyCjwQ', 'hJf_F', '2014-01-01 00:00:00', 1, 1, 1);

INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('en', 'English', 1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('ru', 'Russian',1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('ed', 'Spanish',1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('tr', 'Turkish',1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('de', 'German',1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('zh-CN', 'chinese (Simplified)',1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('it', 'Italian',1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('pt', 'Portuguese',1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('pt-BR', 'Portuguese (Brazil)',1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('fa', 'Farsi',1);
INSERT INTO SERENE_LANGUAGES (LANGUAGEID, LANGUAGENAME, TENANT_ID) VALUES ('vi-VN', 'Vietnamese (Vietnam)',1);

commit work;
